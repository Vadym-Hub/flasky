Basic multiple-file Flask application structure
|-flasky
    |-app/
        |-templates/
        |-static/
        |-main/
            |-__init__.py
            |-errors.py
            |-forms.py
            |-views.py
        |-__init__.py
        |-email.py
        |-models.py
    |-migrations/
    |-tests/
        |-__init__.py
        |-test*.py
    |-venv/
    |-requirements.txt
    |-config.py
    |-flasky.py

This structure has four top-level folders:
• The Flask application lives inside a package generically named app.
• The migrations folder contains the database migration scripts, as before.
• Unit tests are written in a tests package.
• The venv folder contains the Python virtual environment, as before.

There are also a few new files:
• requirements.txt lists the package dependencies so that it is easy to regenerate an
  identical virtual environment on a different computer.
• config.py stores the configuration settings.
• flasky.py defines the Flask application instance, and also includes a few tasks that
  help manage the application.
------------------------------------------------------------------------------------------------

#  Запуск сервера
(venv) $ export FLASK_APP=flasky.py
(venv) $ export FLASK_DEBUG=1

flask run

#  Запуск тестов
(venv) $ flask test

#  Создание БД data.sqlite
(venv) $ flask shell
>>> from hello import db
>>> db.create_all()
>>> db.drop_all()

>>> u = User(email='john@example.com', username='john', password='cat')
>>> db.session.add(u)
>>> db.session.commit()


flask db init
flask db migrate
flask db upgrade


pip install flask-bootstrap  # для работы с Bootstrap

pip install flask-moment  # для работы с датами и временем

pip install flask-wtf  # для работы с веб-формами

pip install flask-sqlalchemy  # для работы з БД (ORM SQLAlchemy)

pip install flask-migrate  # для работы с миграциями
flask db init

pip install flask-mail  # для работы с почтой

pip install flask-login  # для аутентификации

pip install email-validator  # решение для проблеммы валидации email

pip install faker  # Для автоматического создания тестовой(фейковой) базы данных

pip install flask-pagedown markdown bleach  # to support the Mark‐down syntax and present a rich-text preview of the post

pip install flask-httpauth  # Для HTTP-аутентификации для API

pip install httpie  # Для тестирования API-запросов

pip install coverage  # Для получения отчетов о покрытии кода тестами
(venv) $ flask test --coverage  # Запуск проверки на покрытие